---
- hosts: nodes
# sudo: True
  remote_user: arctiqadmin
  become: True
  become_method: sudo
  vars:
    docker_storage_mount: /dev/sdc
      
  tasks:
e 

  - name: Install Docker
    yum: name=docker state=installed update_cache=yes
    register: dockerInstalled
    notify:
    - Start Docker

  - meta: flush_handlers

  - name: Insecure Registry Config 
    lineinfile: dest=/etc/sysconfig/docker  regexp="^OPTIONS" line=OPTIONS='--selinux-enabled --insecure-registry 172.30.0.0/16 --log-opt max-size=1M --log-opt max-file=3' backup=yes backrefs=yes state=present
    register: dockerConfigUpdated

  #- name:  Create Docker Storage Config
  #  when: dockerInstalled|success
  #  shell: echo "DEVS={{ docker_storage_mount}}" > /etc/sysconfig/docker-storage-setup; echo "VG=docker-vg" >> /etc/sysconfig/docker-storage-setup
  #  args:
  #    creates: /etc/sysconfig/docker-storage-setup

  - name: Create Docker Storage Config
    blockinfile: 
      dest: /etc/sysconfig/docker-storage-setup
      create: yes
      content: |
        DEVS={{ docker_storage_mount}}
        VG=docker-vg
    register: dockerStorageConfigFileCreated
    notify:
    - Stop Docker
    - Clean Docker Data

  - meta: flush_handlers

  - name: Check if LVS exists
    shell: lvs | grep docker-pool | awk '{ print $1}'
    register: dockerpoolLVS

  - name: Docker Storage Setup 
    when: dockerpoolLVS.stdout != "docker-pool" and dockerStorageConfigFileCreated|success
    command: docker-storage-setup 
    register: dockerStorageSetupComplete 
    notify: 
    - Stop Docker
    - Clean Docker Data
    - Start Docker

 
  - meta: flush_handlers

  handlers:
  - name: Start Docker
    service: name=docker state=started enabled=yes
  
  - name: Stop Docker
    service: name=docker state=stopped 
  
  - name: Clean Docker Data         
    command: rm -rf /var/lib/docker/*
